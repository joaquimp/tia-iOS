//
//  LoginConfigurator.swift
//  MackTIA
//
//  Created by Joaquim Pessoa Filho on 14/04/16.
//  Copyright (c) 2016 Mackenzie. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension LoginViewController: LoginPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router.passDataToNextScene(segue)
    }
}

extension LoginInteractor: LoginViewControllerOutput {
}

extension LoginPresenter: LoginInteractorOutput {
}

class LoginConfigurator {

    class var sharedInstance: LoginConfigurator {
        struct Static {
            static var instance: LoginConfigurator?
            static var doOnce: () {
                Static.instance = LoginConfigurator()
            }
        }
        Static.doOnce
        return Static.instance!
    }
    
    // MARK: Configuration
    
    func configure(_ viewController: LoginViewController) {
        let router = LoginRouter()
        router.viewController = viewController
        
        let presenter = LoginPresenter()
        presenter.output = viewController
        
        let interactor = LoginInteractor()
        interactor.output = presenter
        
        viewController.output = interactor
        viewController.router = router
    }
}
