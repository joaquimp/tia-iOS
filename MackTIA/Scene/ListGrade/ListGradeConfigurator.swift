//
//  ListGradeConfigurator.swift
//  MackTIA
//
//  Created by Joaquim Pessoa Filho on 14/04/16.
//  Copyright (c) 2016 Mackenzie. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension ListGradeTableViewController: ListGradePresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router.passDataToNextScene(segue)
    }
}

extension ListGradeInteractor: ListGradeTableViewControllerOutput {
}

extension ListGradePresenter: ListGradeInteractorOutput {
}

class ListGradeConfigurator {
//    private static var __once: () = {
//            Static.instance = ListGradeConfigurator()
//        }()
//    // MARK: Object lifecycle
//    
//    class var sharedInstance: ListGradeConfigurator {
//        struct Static {
//            static var instance: ListGradeConfigurator?
//            static var token: Int = 0
//        }
//        
//        _ = ListGradeConfigurator.__once
//        
//        return Static.instance!
//    }
    
    class var sharedInstance: ListGradeConfigurator {
        struct Static {
            static var instance: ListGradeConfigurator?
            static var doOnce: () {
                Static.instance = ListGradeConfigurator()
            }
        }
        Static.doOnce
        return Static.instance!
    }
    
    // MARK: Configuration
    
    func configure(_ viewController: ListGradeTableViewController) {
        let router = ListGradeRouter()
        router.viewController = viewController
        
        let presenter = ListGradePresenter()
        presenter.output = viewController
        
        let interactor = ListGradeInteractor()
        interactor.output = presenter
        
        viewController.output = interactor
        viewController.router = router
    }
}
