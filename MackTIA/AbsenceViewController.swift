//
//  AbsenceViewController.swift
//  MackTIA
//
//  Created by Aleph Retamal on 4/15/16.
//  Copyright (c) 2016 Mackenzie. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// Metodos que poderao ser invocados pelo Presenter
protocol AbsenceViewControllerInput {
    func displayFetchedAbsences(viewModel: AbsenceViewModel)
}

// Metodos que podem ser invocados no Interector
protocol AbsenceViewControllerOutput {
    func fetchAbsences(request: AbsenceRequest)
}

class AbsenceViewController: UITableViewController, AbsenceViewControllerInput {
    @IBOutlet weak var reloadButtonItem: UIBarButtonItem!
    var displayedAbsences:[Absence] = []
    
    // MARK: VIPER properties
    var output: AbsenceViewControllerOutput!
    var router: AbsenceRouter!
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        AbsenceConfigurator.sharedInstance.configure(self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        fetchAbsences()
    }
    
    // MARK: Event handling
    
    func fetchAbsences() {
        // NOTE: Ask the Interactor to do some work
        
        let request = AbsenceRequest()
        output.fetchAbsences(request)
    }
    
    @IBAction func refreshAction(sender: AnyObject) {
        fetchAbsences()
    }
    
    // MARK: Display logic
    
    func displayFetchedAbsences(viewModel: AbsenceViewModel) {
        displayedAbsences = viewModel.displayedAbsences
        tableView.reloadData()
    }
    
    // MARK: UITableViewDataSource
    
    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return displayedAbsences.count
    }
    
    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        let cell = self.tableView.dequeueReusableCellWithIdentifier("faltaCell") as! AbsenceTableViewCell
        let absence = displayedAbsences[indexPath.row]
        
        cell.nomeDaDisciplinaLabel.text = absence.disciplina
        cell.faltasLabel.text = "\(absence.faltas)"
//        TODO: PREENCHER O RESTO DOS OUTLETS
//        cell.aulasPrevistasLabel.text = absence
//        cell.permitidasLabel.text
//        cell.progressBarLabel.text =
        cell.atualizadoEmLabel.text = absence.atualizacao
//        cell.progressBar
//        cell.circleGraph.
//        cell.circleProgressTotalLabel.text =
//        cell.circleProgressLabel.text =
        return cell
    }
    
    // MARK: UITableViewDelegate
}
